.header-wrapper {
  position: fixed;
  z-index: 2;
  /* 얘는 어느 객체가 앞으로 나오고 뒤에 나올지 배치 순서 결정
  relative absolute fixed가 적용된 요소에서만 작동한다
  숫자가 높을수록 우선하게 앞으로 나온다 */
  top: 0px;
  width: 100%;
  background-color: white;
  padding: 5px 0px;
  box-shadow: 0 8px 16px -8px rgba(0, 0, 0, 0.3),
    0 -6px 16px -6px rgba(0, 0, 0, 0.025);
}
.chats-body {
  background-image: url("../images/white-waves.png");
  /* 지금 저 images 폴더가 이 파일이 저장된 css폴더 안에 있는 게
    아니고 아예 별개로 다른 폴더에 있으니 일단 먼저 css폴더 안에서
    나오고 -> .. /// 그 다음에 image 폴더 들어가기 
    이거 이미지는 subtle이라는 사이트에서 다운받음*/
  min-height: 1000vh;
  /* min-width, min-height는 요소의 최소 너비와 높이 설정
    기존에 설정해논 width height값 무시. 최소 이거보다는 크게! */
  /* vh 하나가 1%이다. view height, view width, 등등
    max도 있음
viewpoint는 웹페이지가 사용자에게 보여지는 영역 
- width=device-width : 페이지의 너비를 기기의 스크린 너비로
설정합니다. 즉, 렌더링 영역을 기기의 뷰포트의 크기와 같게 만들어 줍니다.
- initial-scale=1.0 : 처음 페이지 로딩시 확대/축소가 되지 않은 
원래 크기를 사용하도록 합니다. 0~10 사이의 값을 가집니다.
출처: https://offbyone.tistory.com/110 [쉬고 싶은 개발자]*/
}
.chats-body {
  padding: 10px 0px;
  /* background 적용할 때 다 적용되게 하려고 패딩 없앰 */
  padding-top: 100px;
  /* chats-body건 chat-screen이건 다 똑같이 적용되더라 */
}
.header,
.status-bar {
  padding: 0px 20px;
  /* 그리고 나서 헤더하고 상태바에는 헤더 다시 적용시켜줌 */
}
.chat__write-container {
  position: fixed;
  bottom: 0px;
  /* bottom 저거 지정 안 하면 이 박스가 너무 위로 올라감
  잘 보면 nav bar도 지정해놈 */
  width: 80%;
  margin: 0 auto;
  /* auto는 가로 중앙에 배치한다는 뜻이다 */
  /* 그리고 자연스럽게 좌우 여백은 균등하게 배분된다. */
  left: 0;
  right: 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  /* background-color: #fcfcfc; */
  /* padding: 0px 20px; */
  /* 이 패딩 왜 넣었는지 생각! */
  /* border-radius: 40px; */
  /* border-radius: 40px; */
  /* box-shadow: 0 13px 27px -5px rgba(50, 50, 93, 0.25),
    0 8px 16px -8px rgba(0, 0, 0, 0.3), 0 -6px 16px -6px rgba(0, 0, 0, 0.025); */
}
.chat__icon-left {
  position: absolute;
  /* 이거 쓰면은 먼저 absolute 써진 애부터 왼쪽에서부터 정렬됨
  위에서부터 문서를 읽으니 더 위에 써져있는 left부터 왼쪽에 위치 
  원래는 div 박스 위치에 따라서 left right 각각 둘째 셋째 였는데
  바뀜*/
  left: 10px;
  /* 사실은 부모 자리에 static만 아니면 absolute가 다 따라감
  그니까 여기서는 부모가 fixed니까 absolute가 먹힌다는 소리 */
}
.chat__icon-right {
  position: absolute;
  right: 10px;
}
.chat__write {
  /* 하여간 이게 가운데 정렬임 */
  bottom: 0px;
  margin: 0 auto;

  width: 100%;
  border-radius: 0;
  padding: 20px 60px;
  border: none;
  font-size: 14px;
  transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out,
    border-radius 0.3s ease-in-out;
}
.chat__write:focus {
  outline: none;
  transform: translateY(-100px);
  width: 80%;
  border-radius: 40px;
  /* 왜 margin:0 auto를 쓰면 center가 되는가? 그냥 css hack임
  flex가 아니니 justify-content를 쓸 수 없다*/
  /* transform: scaleX(0.7); */
  box-shadow: 0 13px 27px -5px rgba(50, 50, 93, 0.25),
    0 8px 16px -8px rgba(0, 0, 0, 0.3), 0 -6px 16px -6px rgba(0, 0, 0, 0.025);
  animation: float 3s linear infinite forwards;
}

@keyframes float {
  0% {
    /* transform: translateY(-100px); */
    box-shadow: 0 30px 60px -12px rgba(50, 50, 93, 0.25),
      0 18px 36px -18px rgba(0, 0, 0, 0.3),
      0 -12px 36px -8px rgba(0, 0, 0, 0.025);
  }
  50% {
    /* transform: translateY(-110px); */
    box-shadow: 0 30px 60px -60px rgba(50, 50, 93, 0.25),
      0 18px 36px -18px rgba(0, 0, 0, 0.3),
      0 -12px 36px -8px rgba(0, 0, 0, 0.025);
  }
  100% {
    /* transform: translateY(-100px); */
    box-shadow: 0 30px 60px -12px rgba(50, 50, 93, 0.25),
      0 18px 36px -18px rgba(0, 0, 0, 0.3),
      0 -12px 36px -8px rgba(0, 0, 0, 0.025);
  }
}
.chat__icon {
  font-size: 18px;
  transition: opacity 0.3s ease-in-out;
}
.chat__write:focus ~ .chat__icon {
  opacity: 0;
}
.chat__write i {
  font-size: 22px;
}
.chat__write-column:nth-child(2) {
  width: 80%;
}
.chat__write-column input {
  padding: 20px 10px;
  width: 100%;
  border: none;
  /* 이거는 그냥 input 박스 자체 border */
  font-size: 14px;
}
.chat__write-column input:focus {
  outline: none;
  /* input 상자 안 쪽에 outline까지도 완전히 없어지게 하는 것*/
  /* focus는 focus 놓였을 때(클릭했을 때) 여러 속성 주고 싶을
    때 사용한다 -> 즉 뭐 테두리 변경 등등도 가능 */
}

.chat__messages {
  border-top: 1px solid #f7f7f7;
  display: flex;
  flex-direction: column;
  align-items: center;
  /* justify-content: center; */
  padding: 0px 20px;
  padding-top: 30px;
  /* flex why? */
}
.chat__timestamp {
  background-color: white;
  font-size: 12px;
  padding: 5px 10px;
  border-radius: 10px;
  margin-bottom: 30px;
  box-shadow: rgba(0, 0, 0, 0.3) 0px 8px 16px -8px,
    rgba(0, 0, 0, 0.024) 0px -6px 16px -6px;
  text-transform: uppercase;
  font-weight: 700;
}
.message {
  display: flex;
  align-items: flex-start;
  /* 삐뚤빼뚤 그림을 맨 위쪽으로 정렬 시켜주는 거임.
  사진 위로 올릴려고 썼음*/
  /* align-items: center; */
  /* justify-content 가로 align-items 세로 
  하지만 column이냐 row냐에 따라 방향 달라짐*/
  width: 50%;
  margin-bottom: 20px;
}
.message__content {
  width: 80%;
  margin-bottom: 20px;
}
.incoming-message {
  align-self: flex-start;
  /* align-self modifies the child of a flex container. */
}
.sent-message {
  align-self: flex-end;
  /* 일단 flex-start랑 end먼저 해준 다음에 부모 클래스 가서
  flex하는 게 훨씬 쉽다. */
}
@keyframes spin {
  from {
    transform: none;
  }
  to {
    transform: rotateY(1turn);
  }
}

.incoming-message img {
  width: 30px;
  border-radius: 15px;
  margin-right: 15px;
  box-shadow: 0 13px 27px -5px rgba(50, 50, 93, 0.25),
    0 8px 16px -8px rgba(0, 0, 0, 0.3), 0 -6px 16px -6px rgba(0, 0, 0, 0.025);
  animation: spin 1s linear infinite;
}
.message__bubble {
  background-color: white;
  box-shadow: 0 13px 27px -5px rgba(50, 50, 93, 0.25),
    0 8px 16px -8px rgba(0, 0, 0, 0.3), 0 -6px 16px -6px rgba(0, 0, 0, 0.025);
  padding: 10px 20px;
  border-radius: 30px;
}
.message__author {
  /* margin-bottom: 10px; */
  /* 기가 막힌 사실 하나. inline-block이나 block으로는 element의
  width, height, margin, padding 등등 모두 설정가능하나 그냥
  inline 상태(span)로는 아무 것도 설정 불가하다. */
  display: block;
  font-weight: 600;
  font-size: 12px;
  margin-top: 10px;
}
.incoming-message .message__bubble {
  border-bottom-left-radius: 0px;
  color: white;
  /* 글자색은 그냥 바로 색깔 쓰는 거 알제? */
  background: #2980b9;
  background: -webkit-linear-gradient(to left, #ffffff, #6dd5fa, #2980b9);
  background: linear-gradient(to left, #ffffff, #6dd5fa, #2980b9);
  /* to right 또는 to left로 방향 설정 가능 */
  /* uigradients라는 홈페이지 들어가서 복사함
  참고로 background image임!!! */
  /* 굳이 두 개 분리 시킨 이유는 각자 다르게 적용하려고 */
}
.sent-message .message__bubble {
  border-bottom-right-radius: 0px;
  color: white;
  background: #40e0d0; /* fallback for old browsers */
  background: -webkit-linear-gradient(
    to right,
    #ff0080,
    #ff8c00,
    #40e0d0
  ); /* Chrome 10-25, Safari 5.1-6 */
  background: linear-gradient(
    to right,
    #ff0080,
    #ff8c00,
    #40e0d0
  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
}

/* <a href="https://server-dev.tistory.com/149" class="hover 참고"> */

/* 그렇게 해서 margin:0 auto;는 위아래 여백 없이
가로 중앙에 배치되는 가장 기본적인 서식이라는 점!! */
/* margin:0부터 left right:0까지 저 3개는 fixed container를
center해주는 그냥 세트다!*/
/* shadow(가로 (양수면 오른쪽 음수면 왼쪽) 세로(양수면 아래쪽 음수면 위쪽)
blur(값이 클수록 더 흐려짐)) */
/* rgba 저거는 그냥 색깔 지정임 */
/*hover: 마우스를 올렸을 때 / visited: 이미 방문한 링크
link: 아직 방문 안 한 링크 / active: 마우스로 링크 클릭 중일때 */
/* stripe 홈 페이지 들어가서 박스 검사한 다음에 거기 나오는
shadow 통째로 베낌. 괜찮은 사이트 보면 그냥 들어가서 해도 될 듯 */
/* 배경화면 스크린 전체에 적용되게도 한 번 시도해보기 */
/* align-self: 플렉스 요소마다 서로 다른 align 속성값 설정 */
@keyframes incomingAnim {
  from {
    opacity: 0;
    transform: translateX(-200px);
  }
  to {
    opacity: 1;
    transform: none;
  }
}
@keyframes sentAnimation {
  from {
    opacity: 0;
    transform: translateX(200px);
  }
  to {
    opacity: 1;
    transform: none;
  }
}
.incoming-message {
  animation: incomingAnim 0.5s ease-out forwards;
}
.sent-message {
  animation: sentAnimation 0.5s ease-out forwards;
}
